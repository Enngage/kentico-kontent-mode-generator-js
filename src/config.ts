import { CodeType, ModuleResolution } from './enums';
import { version, name } from '../package.json';

export class GeneratorConfig {

    /**
    * Indicates if the first char after replacing underscore will be uppercase
    * e.g. field codename 'first_name' will be converted to 'firstName'
    */
    public readonly uppercaseAfterUnderscoreReplacement: boolean = true;

    public readonly propertyResolver = 'propertyResolver';
    public readonly codeOptions = [CodeType.TypeScript, CodeType.JavaScript];
    public readonly moduleOptions = [ModuleResolution.CommonJs, ModuleResolution.ES2015];
    public readonly itemBaseClass = 'ContentItem';
    public readonly elementsNamespace = 'Elements';
    public readonly CommonJsRequiredName = 'KontentDelivery';
    public readonly npmPackage = '@kentico/kontent-delivery';


    public getNotice(type: 'ts' | 'js', addTimestamp: boolean): string {
        return `
/**
 * Generated by '${name}@${version}'${addTimestamp ? this.getTimestamp() : ''}
 ${type === 'ts' ? this.getTypescriptTip() : ''}
 */`;
    }

    private getTimestamp(): string {
        return ` on '${new Date()}'`;
    }

    private getTypescriptTip(): string {
        return `* Tip: You can replace '${this.itemBaseClass}' with another generated class to fully leverage strong typing.`;
    }
}


export const generatorConfig = new GeneratorConfig();
