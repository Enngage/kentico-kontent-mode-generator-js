import { CodeType, ModuleResolution } from './enums';
import { version, name } from '../package.json';
export class GeneratorConfig {
    constructor() {
        /**
        * Indicates if the first char after replacing underscore will be uppercase
        * e.g. field codename 'first_name' will be converted to 'firstName'
        */
        this.uppercaseAfterUnderscoreReplacement = true;
        this.propertyResolver = 'propertyResolver';
        this.codeOptions = [CodeType.TypeScript, CodeType.JavaScript];
        this.moduleOptions = [ModuleResolution.CommonJs, ModuleResolution.ES2015];
        this.itemBaseClass = 'ContentItem';
        this.elementsNamespace = 'Elements';
        this.CommonJsRequiredName = 'KontentDelivery';
        this.npmPackage = '@kentico/kontent-delivery';
    }
    getNotice(type, addTimestamp) {
        return `
/**
 * Generated by '${name}@${version}'${addTimestamp ? this.getTimestamp() : ''}
 ${type === 'ts' ? this.getTypescriptTip() : ''}
 */`;
    }
    getTimestamp() {
        return ` on '${new Date()}'`;
    }
    getTypescriptTip() {
        return `* Tip: You can replace '${this.itemBaseClass}' with another generated class to fully leverage strong typing.`;
    }
}
export const generatorConfig = new GeneratorConfig();
//# sourceMappingURL=config.js.map